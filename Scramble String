class Solution {
public:
  unordered_map<string, int> mp;
    bool solve(string a, string b)
    {   string key = a + " " + b;
       if (mp.find(key) != mp.end())
		return mp[key];

        if(a.compare(b)==0){
            mp[key] = true;
            return true;
        }
            if(a.length()<=1){
              mp[key] = false;
              return false;
            }
        int n=a.length();
        bool flag=false;
        for(int i=1;i<=n-1;i++){
            if(((solve(a.substr(0,i),b.substr(n-i,i))) &&(solve(a.substr(i,n-i),b.substr(0,n-i)))) || ((solve(a.substr(0,i),b.substr(0,i)))&& (solve(a.substr(i,n-i),b.substr(i,n-i))))){
                  flag=true;
                  break;
            }
        }
            return mp[key]=flag;        
        
    }
    
    bool isScramble(string s1, string s2) {
        mp.clear();
        if(s1.length()!=s2.length())
         return false;
         if(s1.length()==0 || s2.length()==0)
           return false;
           
            
            bool ans=solve(s1,s2);
        return ans;
    }
};
