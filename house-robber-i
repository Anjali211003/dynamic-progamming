class Solution {
public:
int rob1(vector<int>&nums){
       int n=nums.size();
       int t[n+1];
       t[0]=nums[0];
           
            t[1]=max(nums[0],nums[1]);
          
            
             for(int i=2;i<nums.size();i++){
            t[i]=max((nums[i]+t[i-2]),t[i-1]);
        }
            
        return t[n-1];
}
int rob2(vector<int>& nums){
  int n=nums.size();
       int t[n+1];
       t[0]=nums[0];
           
            t[1]=max(nums[0],nums[1]);
          
            
             for(int i=2;i<nums.size();i++){
            t[i]=max((nums[i]+t[i-2]),t[i-1]);
        }
            
        return t[n-1];
}
    int rob(vector<int>& nums) {
        int n=nums.size();
        vector<int>r1(n+1),r2(n+1);
     if(n<2){
        return nums[0];
     }
      for(int i=0;i<nums.size()-1;i++){
        r1[i]=nums[i];
        r2[i]=nums[i+1];
      }
      
       int skiplast=rob1(r1);
       int skipfirst=rob2(r2);
       return max(skiplast,skipfirst);
    }
};
