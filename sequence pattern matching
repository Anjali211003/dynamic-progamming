//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std; 

// } Driver Code Ends

class Solution{
    public:
    int lcs(int n,int m,string X,string Y){
        int t[n+1][m+1];
      
        for(int i=0;i<=n;i++){
            for(int j=0;j<=m;j++){
                if(i==0 || j==0)
                t[i][j]=0;
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(X[i-1]==Y[j-1])
                {
                   t[i][j]=1+t[i-1][j-1];
                }
                else
                t[i][j]=max(t[i][j-1],t[i-1][j]);
            }
        }
        return t[n][m];
    }
    bool isSubSequence(string A, string B) 
    {
      int n=A.size();
      int m=B.size();
    
     if(lcs(n,m,A,B) == min(n, m))
     return 1;
     return 0;
    }
};

//{ Driver Code Starts.
int main() 
{ 
    int t;
    scanf("%d",&t);
    while(t--)
    {
        string A,B;
        cin>>A;
        cin>>B;  
        Solution ob;
        if(ob.isSubSequence(A,B))
            cout<<"1"<<endl;
        else
            cout<<"0"<<endl;
    }
    return 0; 
} 

// } Driver Code Ends
