class Solution {
public:
  int lcs(int n, int m, string s1, string s2)
    { 
        int t[n+1][m+1];
        if(n==0 || m==0)
        return 0;
       
      for(int i=0;i<=n;i++){
          for(int j=0;j<=m;j++){
              if(i==0 || j==0)
              t[i][j]=0;
              }
      }
    for(int i=1;i<=n;i++){
          for(int j=1;j<=m;j++){
        if(s1[i-1]==s2[j-1])
           t[i][j]=1+t[i-1][j-1];
        
        else
          t[i][j]= max(t[i][j-1],t[i-1][j]);
              
          }
    }
      
        return t[n][m];
        }

    int longestPalindromeSubseq(string s) {
        string t(s.rbegin(),s.rend());
        int n=s.length();
        
       int ans= lcs(n,n,s,t);
       return ans;
    }
};
